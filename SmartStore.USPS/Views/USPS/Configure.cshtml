@using SmartStore.Web.Framework;
@model SmartStore.USPS.Models.USPSModel
@{
    Layout = "";
}

<div class="plugin-actions">
	<button id="SaveConfigButton" type="submit" name="save" class="btn btn-warning" value="save">
		<i class="fa fa-check"></i>
		<span>@T("Admin.Common.Save")</span>
	</button>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.UseSandbox)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.UseSandbox)
                @Html.ValidationMessageFor(model => model.UseSandbox)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Username)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Username)
                @Html.ValidationMessageFor(model => model.Username)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Password)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { autocomplete = "new-password", value = Model.Password } })
                @Html.ValidationMessageFor(model => model.Password)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.AdditionalHandlingCharge)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AdditionalHandlingCharge, new { postfix = Model.PrimaryStoreCurrencyCode })
                @Html.ValidationMessageFor(model => model.AdditionalHandlingCharge)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ZipPostalCodeFrom)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ZipPostalCodeFrom)
                @Html.ValidationMessageFor(model => model.ZipPostalCodeFrom)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.AvailableCarrierServicesDomestic)
            </td>
            <td class="adminData">
				<div style="height: 250px;overflow: auto;" class="card p-3">
					@foreach (var csd in Model.AvailableCarrierServicesDomestic)
					{
						<div class="form-check">
							<input class="form-check-input" type="checkbox" name="CheckedCarrierServicesDomestic" value="@(csd)" @(Model.CarrierServicesOfferedDomestic.Contains(csd) ? Html.Raw(" checked=\"checked\"") : null) />
							<label class="form-check-label">@csd</label>
						</div>
					}
				</div>

            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.AvailableCarrierServicesInternational)
            </td>
            <td class="adminData">
                <div style="height: 250px;overflow: auto;" class="card p-3">
                    @foreach (var csi in Model.AvailableCarrierServicesInternational)
                    {
						<div class="form-check">
							<input class="form-check-input" type="checkbox" name="CheckedCarrierServicesInternational" value="@(csi)" @(Model.CarrierServicesOfferedInternational.Contains(csi) ? Html.Raw(" checked=\"checked\"") : null) />
							<label class="form-check-label">@csi</label>
						</div>
                    }
                </div>
            </td>
        </tr>
    </table>    
}