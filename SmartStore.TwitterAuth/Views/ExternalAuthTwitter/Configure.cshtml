@using SmartStore.Web.Framework;
@using SmartStore.TwitterAuth.Models;
@model ConfigurationModel
@{
    Layout = "";
}

<div class="plugin-actions">
	<button id="SaveConfigButton" type="submit" name="save" class="btn btn-warning" value="save">
		<i class="fa fa-check"></i>
		<span>@T("Admin.Common.Save")</span>
	</button>
</div>

<div class="alert alert-info alert-dismissible">
	@Html.Raw(@T("Plugins.ExternalAuth.Twitter.AdminInstruction"))
	<button class="close" data-dismiss="alert">&times;</button>
</div>

@Html.Action("StoreScopeConfiguration", "Setting", new { area = "Admin" })
@Html.ValidationSummary(false)

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ConsumerKey)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ConsumerKey)
                @Html.ValidationMessageFor(model => model.ConsumerKey)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ConsumerSecret)
            </td>
            <td class="adminData">
                @Html.SettingEditorFor(model => model.ConsumerSecret)
                @Html.ValidationMessageFor(model => model.ConsumerSecret)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.CallbackUrls)
            </td>
            <td class="adminData">
			    <div class="form-control-plaintext">
				    @foreach (var url in Model.CallbackUrls)
                    {
                        <div>@url</div>
                    }
			    </div>
            </td>
        </tr>
    </table>
}